Outputs for vamp-wolf
?- [vampiresAndWerewolves].

?- test.
east->west boat, -1 east vamp and wolf, +1 west vamp and wolf
state(1,1,2,2,w)
west->east, -1 west vamp and wolf and +1 east vamp andwolf
state(0,0,3,3,e)
west->east, -1 west vamp and +1 east vamp
state(0,1,3,2,e)
east->west boat, -2 east wolf, +2 west wolf
state(0,3,3,0,w)
west->east, -2 west wolves and +2 east wolves
state(0,1,3,2,e)
west->east, -1 west wolf and +1 east wolf
state(0,2,3,1,e)
east->west boat, -2 east vamp, +2 west vamp
state(2,2,1,1,w)
west->east, -1 west vamp and wolf and +1 east vamp andwolf
state(1,1,2,2,e)
east->west boat, -1 east vamp and wolf, +1 west vamp and wolf
state(2,2,1,1,w)
east->west boat, -2 east vamp, +2 west vamp
state(3,1,0,2,w)
west->east, -2 west vamps and +2 east vamps
state(1,1,2,2,e)
west->east, -1 west wolf and +1 east wolf
state(3,0,0,3,e)
east->west boat, -2 east wolf, +2 west wolf
state(3,2,0,1,w)
west->east, -2 west wolves and +2 east wolves
state(3,0,0,3,e)
west->east, -1 west vamp and +1 east vamp
state(2,2,1,1,e)
east->west boat, -1 east vamp and wolf, +1 west vamp and wolf
state(3,3,0,0,w)

Solution Path Is: 
state(0,0,3,3,e)
state(1,1,2,2,w)
state(0,1,3,2,e)
state(0,3,3,0,w)
state(0,2,3,1,e)
state(2,2,1,1,w)
state(1,1,2,2,e)
state(3,1,0,2,w)
state(3,0,0,3,e)
state(3,2,0,1,w)
state(2,2,1,1,e)
state(3,3,0,0,w)


%% This predicate will show all valid moves. If there are no valid moves then it will return an empty list. %%

?- showValidMoves(state(1,1,2,2,e),ValidMoves).
east->west boat, -1 east vamp and wolf, +1 west vamp and wolf
state(2,2,1,1,w)
east->west boat, -2 east vamp, +2 west vamp
state(3,1,0,2,w)
ValidMoves = [state(2, 2, 1, 1, w), state(3, 1, 0, 2, w)].

%% This predicate will check if 2 states are equivalent or not. %%

?- checkEquivalentState(state(0,0,3,3,e), state(0,0,3,3,e)).
true.